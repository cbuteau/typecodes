"use strict";var TYPECODES={BOOLEAN:0,NUMBER:1,STRING:2,FUNCTION:3,OBJECT:4,UNDEFINED:5,NULL:6,DATE:7,ARRAY:8,UNMAPPED:9,REGEX:10};Object.freeze(TYPECODES);var DEFAULT_EPSILON=.001;function debugStringForTypeCode(typecode){var result="unmapped";switch(typecode){case TYPECODES.ARRAY:result="array";break;case TYPECODES.BOOLEAN:result="boolean";break;case TYPECODES.DATE:result="date";break;case TYPECODES.FUNCTION:result="function";break;case TYPECODES.NULL:result="null";break;case TYPECODES.NUMBER:result="number";break;case TYPECODES.OBJECT:result="object";break;case TYPECODES.REGEX:result="regex";break;case TYPECODES.STRING:result="string";break;case TYPECODES.UNDEFINED:result="undefined";break;case TYPECODES.UNMAPPED:default:result="unmapped"}return result}function getTypeCode(value){return void 0===value?TYPECODES.UNDEFINED:null===value?TYPECODES.NULL:!0===value||!1===value?TYPECODES.BOOLEAN:value.apply&&value.call&&value.bind?TYPECODES.FUNCTION:value.getDay&&value.getYear&&value.getMonth&&value.getHours&&value.getMinutes&&value.getSeconds?TYPECODES.DATE:value.toString&&value.valueOf&&value.toPrecision?TYPECODES.NUMBER:value.trim&&value.indexOf&&value.toLowerCase&&value.toUpperCase?TYPECODES.STRING:value.map&&value.indexOf&&value.push&&value.slice?TYPECODES.ARRAY:value.test&&value.exec?TYPECODES.REGEX:value.isPrototypeOf&&value.hasOwnProperty&&value.toString?TYPECODES.OBJECT:TYPECODES.UNMAPPED}function isTypeCode(value,code){return getTypeCode(value)===code}function validateFunction(func,paramCount){return getTypeCode(func)===TYPECODES.FUNCTION&&func.length===paramCount}function isNotThere(value){var code=getTypeCode(value);return code===TYPECODES.UNDEFINED||code===TYPECODES.NULL}function isFloat(value){return value%1!=0}function compareFloats(floatOne,floatTwo,options){return Math.abs(floatOne-floatTwo)<options.epsilon}function compareArray(arrayOne,arrayTwo){for(var test=!1,i=0;i<arrayOne.length&&(test=compare(arrayOne[i],arrayTwo[i]));i++);return test}function compareObject(objectOne,objectTwo,options){var propKeys=Object.keys(objectOne),propKeysTwo=Object.keys(objectTwo);if(propKeys.length!==propKeysTwo.length)return!1;for(var test=!1,i=0;i<propKeys.length;i++){var propKey=propKeys[i];if(!(test=compare(objectOne[propKey],objectTwo[propKey],options)))break}return test}function actualCompare(valueOne,valueTwo,typeCode,options){var result=!1;switch(typeCode){case TYPECODES.UNDEFINED:case TYPECODES.NULL:result=!0;break;case TYPECODES.BOOLEAN:case TYPECODES.STRING:case TYPECODES.FUNCTION:result=valueOne===valueTwo;break;case TYPECODES.DATE:result=valueOne.getTime()===valueTwo.getTime();break;case TYPECODES.REGEX:result=valueOne.toString()===valueTwo.toString();break;case TYPECODES.NUMBER:result=isFloat(valueOne)&&isFloat(valueTwo)?compareFloats(valueOne,valueTwo,options):valueOne===valueTwo;break;case TYPECODES.ARRAY:result=compareArray(valueOne,valueTwo,options);break;case TYPECODES.OBJECT:result=compareObject(valueOne,valueTwo,options)}return result}function compare(valueOne,valueTwo,options){options=options||{epsilon:DEFAULT_EPSILON};var codeOne=getTypeCode(valueOne);return codeOne===getTypeCode(valueTwo)&&actualCompare(valueOne,valueTwo,codeOne,options)}function exposedIsFloat(value){return getTypeCode(value)===TYPECODES.NUMBER&&isFloat(value)}var exposed={CODES:TYPECODES,get:getTypeCode,is:isTypeCode,isNotThere:isNotThere,validateFunction:validateFunction,str:debugStringForTypeCode,isFloat:exposedIsFloat,compare:compare};"function"==typeof define&&define.amd?define(function(){return exposed}):"object"==typeof exports?module.exports=exposed:window.tc=exposed;